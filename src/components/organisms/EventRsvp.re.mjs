// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Rating from "../../lib/Rating.re.mjs";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Core__Option from "@rescript/core/src/Core__Option.re.mjs";
import * as LucideReact from "lucide-react";
import * as EventRsvpUser from "./EventRsvpUser.re.mjs";
import * as FramerMotion from "framer-motion";
import * as ResponsiveTooltip from "../molecules/ResponsiveTooltip.re.mjs";
import * as JsxRuntime from "react/jsx-runtime";
import * as EventRsvp_rsvp_graphql from "../../__generated__/EventRsvp_rsvp_graphql.re.mjs";
import * as RescriptRelay_Fragment from "rescript-relay/src/RescriptRelay_Fragment.re.mjs";

import { css, cx } from '@linaria/core'
;

import { t, plural } from '@lingui/macro'
;

var convertFragment = EventRsvp_rsvp_graphql.Internal.convertFragment;

function use(fRef) {
  return RescriptRelay_Fragment.useFragment(EventRsvp_rsvp_graphql.node, convertFragment, fRef);
}

function useOpt(fRef) {
  return RescriptRelay_Fragment.useFragmentOpt(fRef !== undefined ? Caml_option.some(Caml_option.valFromOption(fRef)) : undefined, EventRsvp_rsvp_graphql.node, convertFragment);
}

var Fragment = {
  Types: undefined,
  Operation: undefined,
  convertFragment: convertFragment,
  use: use,
  useOpt: useOpt
};

function EventRsvp$ListItem(props) {
  return JsxRuntime.jsxs(FramerMotion.motion.div, {
              className: "",
              style: {
                originX: 0.05,
                originY: 0.05
              },
              animate: {
                opacity: 1,
                scale: 1
              },
              initial: {
                opacity: 0,
                scale: 1.15
              },
              exit: {
                opacity: 0,
                scale: 1.15
              },
              children: [
                JsxRuntime.jsx("div", {
                      children: JsxRuntime.jsx("span", {
                            children: t`Player`,
                            className: "sr-only"
                          }),
                      className: "flex-none"
                    }),
                props.children
              ]
            });
}

var ListItem = {
  make: EventRsvp$ListItem
};

function EventRsvp(props) {
  var __isAdmin = props.isAdmin;
  var eventId = props.eventId;
  var maxRating = props.maxRating;
  var activitySlug = props.activitySlug;
  var viewer = props.viewer;
  var isAdmin = __isAdmin !== undefined ? __isAdmin : false;
  var rsvp = use(props.rsvp);
  return Core__Option.getOr(Core__Option.map(rsvp.user, (function (user) {
                    var tmp;
                    tmp = activitySlug === "pickleball" ? Core__Option.getOr(Core__Option.map(Core__Option.flatMap(rsvp.rating, (function (r) {
                                      return r.mu;
                                    })), (function (mu) {
                                  return Rating.guessDupr(mu).toFixed(2);
                                })), "") : "";
                    return JsxRuntime.jsx(EventRsvp$ListItem, {
                                children: JsxRuntime.jsxs("div", {
                                      children: [
                                        JsxRuntime.jsx(EventRsvpUser.make, {
                                              user: user.fragmentRefs,
                                              highlight: Core__Option.getOr(Core__Option.map(viewer, (function (viewer) {
                                                          return viewer.id === user.id;
                                                        })), false),
                                              link: "/league/" + Core__Option.getOr(activitySlug, "badminton") + "/p/" + user.id,
                                              secondaryText: tmp,
                                              sigmaPercent: Core__Option.getOr(Core__Option.flatMap(rsvp.rating, (function (rating) {
                                                          return Core__Option.map(rating.sigma, (function (sigma) {
                                                                        return 3 * sigma / maxRating * 100;
                                                                      }));
                                                        })), 0),
                                              ratingPercent: Core__Option.getOr(Core__Option.flatMap(rsvp.rating, (function (rating) {
                                                          return Core__Option.flatMap(rating.mu, (function (mu) {
                                                                        return Core__Option.map(rating.sigma, (function (sigma) {
                                                                                      return (mu - sigma * 3.0) / maxRating * 100;
                                                                                    }));
                                                                      }));
                                                        })), 0),
                                              eventId: eventId,
                                              eventActivitySlug: Core__Option.getOr(activitySlug, "badminton"),
                                              isAdmin: isAdmin
                                            }),
                                        Core__Option.getOr(Core__Option.map(rsvp.message, (function (message) {
                                                    return JsxRuntime.jsx(ResponsiveTooltip.Provider.make, {
                                                                children: JsxRuntime.jsx(ResponsiveTooltip.make, {
                                                                      children: JsxRuntime.jsx("div", {
                                                                            children: JsxRuntime.jsx(LucideReact.MessageCircle, {
                                                                                  className: "h-4 w-4 text-gray-500"
                                                                                }),
                                                                            className: "ml-2 cursor-help"
                                                                          }),
                                                                      content: message,
                                                                      side: "bottom"
                                                                    })
                                                              });
                                                  })), null)
                                      ],
                                      className: "flex items-center"
                                    })
                              }, user.id);
                  })), null);
}

var make = EventRsvp;

export {
  Fragment ,
  ListItem ,
  make ,
}
/*  Not a pure module */
