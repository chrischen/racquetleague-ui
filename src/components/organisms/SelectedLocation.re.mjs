// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as UiAction from "../atoms/UiAction.re.mjs";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as FormSection from "../molecules/forms/FormSection.re.mjs";
import * as Core__Option from "@rescript/core/src/Core__Option.re.mjs";
import * as WaitForMessages from "../shared/i18n/WaitForMessages.re.mjs";
import * as JsxRuntime from "react/jsx-runtime";
import * as AutocompleteLocation from "./AutocompleteLocation.re.mjs";
import * as AppContext from "../layouts/appContext";
import * as RescriptRelay_Fragment from "rescript-relay/src/RescriptRelay_Fragment.re.mjs";
import * as SelectedLocation_location_graphql from "../../__generated__/SelectedLocation_location_graphql.re.mjs";

import { css, cx } from '@linaria/core'
;

import { t } from '@lingui/macro'
;

var convertFragment = SelectedLocation_location_graphql.Internal.convertFragment;

function use(fRef) {
  return RescriptRelay_Fragment.useFragment(SelectedLocation_location_graphql.node, convertFragment, fRef);
}

function useOpt(fRef) {
  return RescriptRelay_Fragment.useFragmentOpt(fRef !== undefined ? Caml_option.some(Caml_option.valFromOption(fRef)) : undefined, SelectedLocation_location_graphql.node, convertFragment);
}

var Fragment = {
  Types: undefined,
  Operation: undefined,
  convertFragment: convertFragment,
  use: use,
  useOpt: useOpt
};

var sessionContext = AppContext.SessionContext;

function SelectedLocation(props) {
  var onNewLocation = props.onNewLocation;
  var match = React.useState(function () {
        return false;
      });
  var setShowUpdateLocation = match[1];
  var showUpdateLocation = match[0];
  var $$location = use(props.location);
  return JsxRuntime.jsx(WaitForMessages.make, {
              children: (function () {
                  return JsxRuntime.jsx(FormSection.make, {
                              title: t`event location`,
                              description: Caml_option.some(t`choose the location where this event will be held.`),
                              children: JsxRuntime.jsxs("div", {
                                    children: [
                                      JsxRuntime.jsxs("div", {
                                            children: [
                                              JsxRuntime.jsx("span", {
                                                    children: Core__Option.getOr($$location.name, "?"),
                                                    className: "font-extrabold"
                                                  }),
                                              JsxRuntime.jsx(UiAction.make, {
                                                    onClick: (function (param) {
                                                        setShowUpdateLocation(function (prev) {
                                                              return !prev;
                                                            });
                                                      }),
                                                    className: "ml-2",
                                                    children: t`change location`
                                                  })
                                            ]
                                          }),
                                      showUpdateLocation ? JsxRuntime.jsx(AutocompleteLocation.make, {
                                              onSelected: onNewLocation
                                            }, "autocomplete") : null
                                    ],
                                    className: "mt-10 grid grid-cols-1 gap-x-6 gap-y-8"
                                  })
                            });
                })
            });
}

var make = SelectedLocation;

export {
  Fragment ,
  sessionContext ,
  make ,
}
/*  Not a pure module */
