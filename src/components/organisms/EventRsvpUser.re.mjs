// Generated by ReScript, PLEASE EDIT WITH CARE

import * as RsvpOptions from "./RsvpOptions.re.mjs";
import * as Core__Option from "@rescript/core/src/Core__Option.re.mjs";
import * as AvatarRsvpUser from "./AvatarRsvpUser.re.mjs";
import * as JsxRuntime from "react/jsx-runtime";
import * as RescriptRelay_Fragment from "rescript-relay/src/RescriptRelay_Fragment.re.mjs";
import * as EventRsvpUser_user_graphql from "../../__generated__/EventRsvpUser_user_graphql.re.mjs";

var convertFragment = EventRsvpUser_user_graphql.Internal.convertFragment;

function use(fRef) {
  return RescriptRelay_Fragment.useFragment(EventRsvpUser_user_graphql.node, convertFragment, fRef);
}

function fromRegisteredUser(user) {
  return {
          name: Core__Option.getOr(user.lineUsername, "[Line username missing]"),
          picture: user.picture
        };
}

function EventRsvpUser(props) {
  var __isAdmin = props.isAdmin;
  var __highlight = props.highlight;
  var highlight = __highlight !== undefined ? __highlight : false;
  var isAdmin = __isAdmin !== undefined ? __isAdmin : false;
  var user = use(props.user);
  var userData = fromRegisteredUser(user);
  var avatarRsvpUser = JsxRuntime.jsx(AvatarRsvpUser.make, {
        user: userData,
        highlight: highlight,
        link: props.link,
        secondaryText: props.secondaryText,
        sigmaPercent: props.sigmaPercent,
        ratingPercent: props.ratingPercent
      });
  return JsxRuntime.jsx(RsvpOptions.make, {
              user: user.fragmentRefs,
              eventId: props.eventId,
              eventActivitySlug: props.eventActivitySlug,
              isAdmin: isAdmin,
              children: avatarRsvpUser
            });
}

var make = EventRsvpUser;

export {
  make ,
}
/* RsvpOptions Not a pure module */
