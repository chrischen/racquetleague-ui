// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Grid from "../vanillaui/atoms/Grid.re.mjs";
import * as React from "react";
import * as Layout from "../shared/Layout.re.mjs";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as FormSection from "../molecules/forms/FormSection.re.mjs";
import * as Core__Option from "@rescript/core/src/Core__Option.re.mjs";
import * as FramerMotion from "framer-motion";
import * as CreateClubForm from "./CreateClubForm.re.mjs";
import * as WaitForMessages from "../shared/i18n/WaitForMessages.re.mjs";
import * as ReactRouterDom from "react-router-dom";
import * as JsxRuntime from "react/jsx-runtime";
import * as AppContext from "../layouts/appContext";
import * as RescriptRelay_Fragment from "rescript-relay/src/RescriptRelay_Fragment.re.mjs";
import * as SelectClub_query_graphql from "../../__generated__/SelectClub_query_graphql.re.mjs";
import * as SelectClubRefetchQuery_graphql from "../../__generated__/SelectClubRefetchQuery_graphql.re.mjs";

import { css, cx } from '@linaria/core'
;

import { t } from '@lingui/macro'
;

var getConnectionNodes = SelectClub_query_graphql.Utils.getConnectionNodes;

var convertFragment = SelectClub_query_graphql.Internal.convertFragment;

function use(fRef) {
  return RescriptRelay_Fragment.useFragment(SelectClub_query_graphql.node, convertFragment, fRef);
}

function SelectClub(props) {
  var navigate = ReactRouterDom.useNavigate();
  var data = use(props.clubs);
  var clubs = Core__Option.getOr(Core__Option.map(data.viewer, (function (viewer) {
              return getConnectionNodes(viewer.adminClubs);
            })), []);
  var match = React.useState(function () {
        return false;
      });
  var setShowCreateclub = match[1];
  var showCreateclub = match[0];
  return JsxRuntime.jsx(WaitForMessages.make, {
              children: (function () {
                  return JsxRuntime.jsx(Layout.Container.make, {
                              children: JsxRuntime.jsxs(Grid.make, {
                                    children: [
                                      JsxRuntime.jsx(FormSection.make, {
                                            title: t`select club`,
                                            description: Caml_option.some(t`choose the club where this event will be held.`),
                                            children: JsxRuntime.jsxs("div", {
                                                  children: [
                                                    JsxRuntime.jsx("ul", {
                                                          children: clubs.map(function (node) {
                                                                return JsxRuntime.jsx("li", {
                                                                            children: JsxRuntime.jsx(ReactRouterDom.NavLink, {
                                                                                  to: encodeURIComponent(node.id),
                                                                                  children: Core__Option.getOr(node.name, "?"),
                                                                                  className: (function (param) {
                                                                                      if (param.isActive) {
                                                                                        return "font-extrabold";
                                                                                      } else {
                                                                                        return "";
                                                                                      }
                                                                                    })
                                                                                })
                                                                          }, node.id);
                                                              })
                                                        }),
                                                    JsxRuntime.jsxs("a", {
                                                          children: [
                                                            showCreateclub ? "- " : "+ ",
                                                            t`add new club`
                                                          ],
                                                          href: "#",
                                                          onClick: (function (param) {
                                                              setShowCreateclub(function (prev) {
                                                                    return !prev;
                                                                  });
                                                            })
                                                        }),
                                                    JsxRuntime.jsx(FramerMotion.AnimatePresence, {
                                                          mode: "sync",
                                                          children: showCreateclub ? JsxRuntime.jsx(FramerMotion.motion.div, {
                                                                  className: "",
                                                                  style: {
                                                                    opacity: 1,
                                                                    y: 0
                                                                  },
                                                                  animate: {
                                                                    opacity: 1,
                                                                    scale: 1,
                                                                    y: 0.00
                                                                  },
                                                                  initial: {
                                                                    opacity: 0,
                                                                    scale: 1,
                                                                    y: -50
                                                                  },
                                                                  exit: {
                                                                    opacity: 0,
                                                                    scale: 1,
                                                                    y: -50
                                                                  },
                                                                  children: Caml_option.some(JsxRuntime.jsx(CreateClubForm.make, {
                                                                            connectionId: Core__Option.map(data.viewer, (function (v) {
                                                                                    return v.__id;
                                                                                  })),
                                                                            query: data.fragmentRefs,
                                                                            onCancel: (function (param) {
                                                                                setShowCreateclub(function (param) {
                                                                                      return false;
                                                                                    });
                                                                              }),
                                                                            onCreated: (function (club) {
                                                                                setShowCreateclub(function (param) {
                                                                                      return false;
                                                                                    });
                                                                                navigate(encodeURIComponent(club.id), undefined);
                                                                              })
                                                                          }))
                                                                }) : null
                                                        })
                                                  ],
                                                  className: "mt-10 grid grid-cols-1 gap-x-6 gap-y-8"
                                                })
                                          }),
                                      JsxRuntime.jsx(FramerMotion.AnimatePresence, {
                                            mode: "wait",
                                            children: JsxRuntime.jsx(ReactRouterDom.Outlet, {})
                                          })
                                    ]
                                  })
                            });
                })
            });
}

var make = SelectClub;

export {
  make ,
}
/*  Not a pure module */
