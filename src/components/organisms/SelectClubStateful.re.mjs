// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Grid from "../vanillaui/atoms/Grid.re.mjs";
import * as React from "react";
import * as UiAction from "../atoms/UiAction.re.mjs";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as FormSection from "../molecules/forms/FormSection.re.mjs";
import * as Core__Option from "@rescript/core/src/Core__Option.re.mjs";
import * as FramerMotion from "framer-motion";
import * as CreateClubForm from "./CreateClubForm.re.mjs";
import * as WaitForMessages from "../shared/i18n/WaitForMessages.re.mjs";
import * as ReactRouterDom from "react-router-dom";
import * as JsxRuntime from "react/jsx-runtime";
import * as RescriptRelay_Fragment from "rescript-relay/src/RescriptRelay_Fragment.re.mjs";
import * as SelectClubStateful_query_graphql from "../../__generated__/SelectClubStateful_query_graphql.re.mjs";
import * as SelectClubStatefulRefetchQuery_graphql from "../../__generated__/SelectClubStatefulRefetchQuery_graphql.re.mjs";

import { css, cx } from '@linaria/core'
;

import { t } from '@lingui/macro'
;

var convertFragment = SelectClubStateful_query_graphql.Internal.convertFragment;

function use(fRef) {
  return RescriptRelay_Fragment.useFragment(SelectClubStateful_query_graphql.node, convertFragment, fRef);
}

function useOpt(fRef) {
  return RescriptRelay_Fragment.useFragmentOpt(fRef !== undefined ? Caml_option.some(Caml_option.valFromOption(fRef)) : undefined, SelectClubStateful_query_graphql.node, convertFragment);
}

var makeRefetchVariables = SelectClubStatefulRefetchQuery_graphql.Types.makeRefetchVariables;

var convertRefetchVariables = SelectClubStatefulRefetchQuery_graphql.Internal.convertVariables;

function useRefetchable(fRef) {
  return RescriptRelay_Fragment.useRefetchableFragment(SelectClubStateful_query_graphql.node, convertFragment, convertRefetchVariables, fRef);
}

function usePagination(fRef) {
  return RescriptRelay_Fragment.usePaginationFragment(SelectClubStateful_query_graphql.node, fRef, convertFragment, convertRefetchVariables);
}

function useBlockingPagination(fRef) {
  return RescriptRelay_Fragment.useBlockingPaginationFragment(SelectClubStateful_query_graphql.node, fRef, convertFragment, convertRefetchVariables);
}

var Fragment_getConnectionNodes = SelectClubStateful_query_graphql.Utils.getConnectionNodes;

var Fragment = {
  getConnectionNodes: Fragment_getConnectionNodes,
  Types: undefined,
  Operation: undefined,
  convertFragment: convertFragment,
  use: use,
  useOpt: useOpt,
  makeRefetchVariables: makeRefetchVariables,
  convertRefetchVariables: convertRefetchVariables,
  useRefetchable: useRefetchable,
  usePagination: usePagination,
  useBlockingPagination: useBlockingPagination
};

function SelectClubStateful(props) {
  var fragments = props.fragments;
  var connectionId = props.connectionId;
  var __value = props.value;
  var onSelected = props.onSelected;
  var clubs = props.clubs;
  var value = __value !== undefined ? Caml_option.valFromOption(__value) : undefined;
  var match = React.useState(function () {
        return false;
      });
  var setShowCreateclub = match[1];
  var showCreateclub = match[0];
  return JsxRuntime.jsx(WaitForMessages.make, {
              children: (function () {
                  return JsxRuntime.jsxs(Grid.make, {
                              children: [
                                JsxRuntime.jsx(FormSection.make, {
                                      title: t`select club`,
                                      description: Caml_option.some(t`choose the club where this event will be held.`),
                                      children: JsxRuntime.jsxs("div", {
                                            children: [
                                              JsxRuntime.jsx("ul", {
                                                    children: clubs.map(function (node) {
                                                          return JsxRuntime.jsx("li", {
                                                                      children: JsxRuntime.jsx(UiAction.make, {
                                                                            onClick: (function () {
                                                                                onSelected(node.id);
                                                                              }),
                                                                            className: Core__Option.getOr(Core__Option.map(value, (function (s) {
                                                                                        return s === node.id;
                                                                                      })), false) ? "font-extrabold" : "",
                                                                            children: Core__Option.getOr(node.name, "?")
                                                                          })
                                                                    }, node.id);
                                                        })
                                                  }),
                                              JsxRuntime.jsxs(UiAction.make, {
                                                    onClick: (function () {
                                                        setShowCreateclub(function (prev) {
                                                              return !prev;
                                                            });
                                                      }),
                                                    children: [
                                                      showCreateclub ? "- " : "+ ",
                                                      t`add new club`
                                                    ]
                                                  }),
                                              JsxRuntime.jsx(FramerMotion.AnimatePresence, {
                                                    mode: "sync",
                                                    children: showCreateclub ? JsxRuntime.jsx(FramerMotion.motion.div, {
                                                            className: "",
                                                            style: {
                                                              opacity: 1,
                                                              y: 0
                                                            },
                                                            animate: {
                                                              opacity: 1,
                                                              scale: 1,
                                                              y: 0.00
                                                            },
                                                            initial: {
                                                              opacity: 0,
                                                              scale: 1,
                                                              y: -50
                                                            },
                                                            exit: {
                                                              opacity: 0,
                                                              scale: 1,
                                                              y: -50
                                                            },
                                                            children: Caml_option.some(JsxRuntime.jsx(CreateClubForm.make, {
                                                                      connectionId: connectionId,
                                                                      query: fragments,
                                                                      onCancel: (function (param) {
                                                                          setShowCreateclub(function (param) {
                                                                                return false;
                                                                              });
                                                                        }),
                                                                      onCreated: (function (club) {
                                                                          setShowCreateclub(function (param) {
                                                                                return false;
                                                                              });
                                                                          onSelected(club.id);
                                                                        }),
                                                                      inline: true
                                                                    }))
                                                          }) : null
                                                  })
                                            ],
                                            className: "mt-10 grid grid-cols-1 gap-x-6 gap-y-8"
                                          })
                                    }),
                                JsxRuntime.jsx(FramerMotion.AnimatePresence, {
                                      mode: "wait",
                                      children: JsxRuntime.jsx(ReactRouterDom.Outlet, {})
                                    })
                              ]
                            });
                })
            });
}

var make = SelectClubStateful;

export {
  Fragment ,
  make ,
}
/*  Not a pure module */
