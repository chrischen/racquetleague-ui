// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Zod from "zod";
import * as Form from "../molecules/forms/Form.re.mjs";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Core__Float from "@rescript/core/src/Core__Float.re.mjs";
import * as Core__Option from "@rescript/core/src/Core__Option.re.mjs";
import * as ReactHookForm from "react-hook-form";
import * as JsxRuntime from "react/jsx-runtime";
import * as Zod$1 from "@hookform/resolvers/zod";

import { t, plural } from '@lingui/macro'
;

var ControllerOfInputs = {};

var schema = Zod.z.object({
      numberOnBreak: Zod.z.number({}).int()
    });

function SessionEvenPlayMode(props) {
  var onChangeBreakCount = props.onChangeBreakCount;
  var match = ReactHookForm.useForm({
        resolver: Caml_option.some(Zod$1.zodResolver(schema)),
        defaultValues: {
          numberOnBreak: props.breakCount
        }
      });
  var setValue = match.setValue;
  var onSubmit = function (data) {
    onChangeBreakCount(data.numberOnBreak | 0);
    setValue("numberOnBreak", "", undefined);
  };
  return JsxRuntime.jsx("div", {
              children: JsxRuntime.jsxs("form", {
                    children: [
                      JsxRuntime.jsx(Form.Input.make, {
                            label: Caml_option.some(t`How many players should rest? (currently ${props.breakPlayersCount.toString()} players are resting)`),
                            className: "w-24 sm:w-32 md:w-48  flex-1 border-0 bg-transparent py-1.5 pl-1 text-gray-900 placeholder:text-gray-400 focus:ring-0 text-2xl sm:text-5xl sm:leading-6",
                            id: "numberOnBreak",
                            type_: "text",
                            register: match.register("numberOnBreak", {
                                  setValueAs: (function (v) {
                                      if (v === "") {
                                        return 0;
                                      } else {
                                        return Core__Option.getOr(Core__Float.fromString(v), 0);
                                      }
                                    })
                                })
                          }),
                      JsxRuntime.jsx("p", {
                            children: t`Set this to the number of players currently resting to enable even leveling of match counts. Set to 0 to disable and optimize match quality instead, but this may result in some players playing more matches than others.`,
                            className: "mt-2 text-sm text-gray-500"
                          }),
                      JsxRuntime.jsx(Form.Footer.make, {})
                    ],
                    onSubmit: match.handleSubmit(onSubmit)
                  }),
              className: "grid grid-cols-1 items-start gap-4"
            });
}

var make = SessionEvenPlayMode;

export {
  ControllerOfInputs ,
  schema ,
  make ,
}
/*  Not a pure module */
