// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Layout from "../shared/Layout.re.mjs";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as ClubDetails from "../organisms/ClubDetails.re.mjs";
import * as Core__Option from "@rescript/core/src/Core__Option.re.mjs";
import * as LucideReact from "lucide-react";
import * as React$1 from "@lingui/react";
import * as ClubEventsList from "../organisms/ClubEventsList.re.mjs";
import * as WaitForMessages from "../shared/i18n/WaitForMessages.re.mjs";
import * as ReactRouterDom from "react-router-dom";
import * as JsxRuntime from "react/jsx-runtime";
import * as RescriptRelay_Query from "rescript-relay/src/RescriptRelay_Query.re.mjs";
import * as ClubPageQuery_graphql from "../../__generated__/ClubPageQuery_graphql.re.mjs";

import { t } from '@lingui/macro'
;

var convertVariables = ClubPageQuery_graphql.Internal.convertVariables;

var convertResponse = ClubPageQuery_graphql.Internal.convertResponse;

RescriptRelay_Query.useQuery(convertVariables, ClubPageQuery_graphql.node, convertResponse);

RescriptRelay_Query.useLoader(convertVariables, ClubPageQuery_graphql.node, (function (prim) {
        return prim;
      }));

var usePreloaded = RescriptRelay_Query.usePreloaded(ClubPageQuery_graphql.node, convertResponse, (function (prim) {
        return prim;
      }));

RescriptRelay_Query.$$fetch(ClubPageQuery_graphql.node, convertResponse, convertVariables);

RescriptRelay_Query.fetchPromised(ClubPageQuery_graphql.node, convertResponse, convertVariables);

RescriptRelay_Query.retain(ClubPageQuery_graphql.node, convertVariables);

function ClubPage$ShareLink(props) {
  var inputRef = React.useRef(null);
  var handleClickToSelect = function (_event) {
    Core__Option.forEach(Caml_option.nullable_to_opt(inputRef.current), (function (inputElement) {
            inputElement.select();
          }));
  };
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("label", {
                      children: t`Shareable Link`,
                      className: "block text-sm font-medium text-gray-700",
                      htmlFor: "share-club-link"
                    }),
                JsxRuntime.jsx("div", {
                      children: JsxRuntime.jsx("input", {
                            ref: Caml_option.some(inputRef),
                            className: "block w-full shadow-sm sm:text-sm focus:ring-indigo-500 focus:border-indigo-500 border-gray-300 rounded-md bg-gray-50 cursor-pointer",
                            id: "share-club-link",
                            name: "share-club-link",
                            readOnly: true,
                            type: "text",
                            value: props.link,
                            onClick: handleClickToSelect
                          }),
                      className: "mt-1"
                    }),
                JsxRuntime.jsx("p", {
                      children: t`Click the link to select it for easy copying.`,
                      className: "mt-2 text-sm text-gray-500"
                    })
              ],
              className: "my-4"
            });
}

function ClubPage(props) {
  var data = ReactRouterDom.useLoaderData();
  var query = usePreloaded(data.data);
  var match = React$1.useLingui();
  var locale = match.i18n.locale;
  var match$1 = React.useState(function () {
        return false;
      });
  var setIsShareLinkOpen = match$1[1];
  var isShareLinkOpen = match$1[0];
  var toggleShareLink = React.useCallback((function () {
          setIsShareLinkOpen(function (prev) {
                return !prev;
              });
        }), [setIsShareLinkOpen]);
  return JsxRuntime.jsx(WaitForMessages.make, {
              children: (function () {
                  return Core__Option.getOr(Core__Option.map(query.club, (function (club) {
                                    return JsxRuntime.jsx(JsxRuntime.Fragment, {
                                                children: Caml_option.some(JsxRuntime.jsx(ClubEventsList.make, {
                                                          events: club.fragmentRefs,
                                                          header: JsxRuntime.jsxs(Layout.Container.make, {
                                                                children: [
                                                                  JsxRuntime.jsxs("h1", {
                                                                        children: [
                                                                          JsxRuntime.jsx("div", {
                                                                                children: t`club`,
                                                                                className: "text-base leading-6 text-gray-500"
                                                                              }),
                                                                          JsxRuntime.jsxs("div", {
                                                                                children: [
                                                                                  Core__Option.getOr(club.name, "?"),
                                                                                  JsxRuntime.jsx("button", {
                                                                                        children: JsxRuntime.jsx(LucideReact.Share2, {
                                                                                              color: "#6B7280"
                                                                                            }),
                                                                                        className: "ml-2",
                                                                                        onClick: (function (param) {
                                                                                            toggleShareLink();
                                                                                          })
                                                                                      })
                                                                                ],
                                                                                className: "flex items-center mt-1 text-2xl font-semibold leading-6 text-gray-900"
                                                                              })
                                                                        ]
                                                                      }),
                                                                  isShareLinkOpen ? JsxRuntime.jsx(ClubPage$ShareLink, {
                                                                          link: "https://www.pkuru.com/" + locale + Core__Option.getOr(club.shareLink, "")
                                                                        }) : null,
                                                                  JsxRuntime.jsx(ClubDetails.make, {
                                                                        club: club.fragmentRefs
                                                                      })
                                                                ]
                                                              })
                                                        }))
                                              });
                                  })), JsxRuntime.jsx(Layout.Container.make, {
                                  children: t`club not found`
                                }));
                })
            });
}

var make = ClubPage;

export {
  make ,
}
/*  Not a pure module */
