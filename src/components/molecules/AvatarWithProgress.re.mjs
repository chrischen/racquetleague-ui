// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Core__Option from "@rescript/core/src/Core__Option.re.mjs";
import * as JsxRuntime from "react/jsx-runtime";

function AvatarWithProgress(props) {
  var sigmaProgress = props.sigmaProgress;
  var progressVal = Core__Option.getOr(props.progress, 100);
  var sigmaProgressVal = Core__Option.getOr(sigmaProgress, 0);
  var radius = (32 - 2) / 2;
  var circumference = radius * 2 * 3.141592653589793;
  var strokeDashoffset = circumference - progressVal / 100 * circumference;
  var sigmaArcLength = sigmaProgressVal / 100 * circumference;
  var sigmaStrokeDashoffset = circumference - sigmaArcLength;
  var sigmaRotationAngle = progressVal * 360 / 100;
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsxs("svg", {
                      children: [
                        JsxRuntime.jsx("circle", {
                              className: "text-gray-200",
                              cx: String(32 / 2),
                              cy: String(32 / 2),
                              fill: "transparent",
                              r: String(radius),
                              stroke: "currentColor",
                              strokeWidth: String(2)
                            }),
                        Core__Option.getOr(Core__Option.map(sigmaProgress, (function (param) {
                                    return JsxRuntime.jsx("circle", {
                                                className: "text-red-300",
                                                style: {
                                                  opacity: "0.7"
                                                },
                                                cx: String(32 / 2),
                                                cy: String(32 / 2),
                                                fill: "transparent",
                                                r: String(radius),
                                                stroke: "currentColor",
                                                strokeDasharray: String(circumference),
                                                strokeDashoffset: String(sigmaStrokeDashoffset),
                                                strokeLinecap: "round",
                                                strokeWidth: String(2),
                                                transform: "rotate(" + String(sigmaRotationAngle) + " " + String(32 / 2) + " " + String(32 / 2) + ")"
                                              });
                                  })), null),
                        JsxRuntime.jsx("circle", {
                              className: "text-red-500",
                              cx: String(32 / 2),
                              cy: String(32 / 2),
                              fill: "transparent",
                              r: String(radius),
                              stroke: "currentColor",
                              strokeDasharray: String(circumference),
                              strokeDashoffset: String(strokeDashoffset),
                              strokeLinecap: "round",
                              strokeWidth: String(2)
                            })
                      ],
                      className: "absolute inset-0 w-full h-full -rotate-90",
                      viewBox: "0 0 " + (32).toString() + " " + (32).toString()
                    }),
                JsxRuntime.jsx("img", {
                      className: "rounded-full w-full h-full object-cover",
                      style: {
                        padding: String(2) + "px"
                      },
                      alt: props.alt,
                      src: props.src
                    })
              ],
              className: "relative flex-shrink-0",
              style: {
                height: String(32) + "px",
                width: String(32) + "px"
              }
            });
}

var make = AvatarWithProgress;

export {
  make ,
}
/* react/jsx-runtime Not a pure module */
