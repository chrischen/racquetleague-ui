// Generated by ReScript, PLEASE EDIT WITH CARE

import * as ReactIntl from "react-intl";
import * as Core__Option from "@rescript/core/src/Core__Option.re.mjs";
import * as LucideReact from "lucide-react";
import * as JsxRuntime from "react/jsx-runtime";
import * as CreateEventsButton from "../organisms/CreateEventsButton.re.mjs";

import { t } from '@lingui/macro'
;

function AIResponseCard(props) {
  var onEventsCreated = props.onEventsCreated;
  var clubId = props.clubId;
  var activitySlug = props.activitySlug;
  var response = props.response;
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("div", {
                      children: JsxRuntime.jsx("p", {
                            children: response.summary,
                            className: "text-gray-700 dark:text-gray-300 leading-relaxed"
                          }),
                      className: "p-4 bg-gradient-to-br from-purple-50/80 to-blue-50/80 dark:from-purple-900/20 dark:to-blue-900/20 backdrop-blur-sm rounded-2xl border border-purple-200/50 dark:border-purple-700/30"
                    }),
                Core__Option.getOr(Core__Option.map(response.eventDetails, (function (details) {
                            var startDate = new Date(details.date);
                            var endDate = new Date(details.time);
                            return JsxRuntime.jsxs("div", {
                                        children: [
                                          JsxRuntime.jsxs("h3", {
                                                children: [
                                                  JsxRuntime.jsx(LucideReact.Calendar, {
                                                        className: "w-4 h-4"
                                                      }),
                                                  t`Event Details`
                                                ],
                                                className: "font-semibold text-gray-900 dark:text-white flex items-center gap-2"
                                              }),
                                          JsxRuntime.jsxs("div", {
                                                children: [
                                                  JsxRuntime.jsxs("div", {
                                                        children: [
                                                          JsxRuntime.jsx("span", {
                                                                children: t`Title:`,
                                                                className: "text-gray-500 dark:text-gray-400"
                                                              }),
                                                          JsxRuntime.jsx("span", {
                                                                children: details.title,
                                                                className: "font-medium text-gray-900 dark:text-white"
                                                              })
                                                        ],
                                                        className: "flex justify-between"
                                                      }),
                                                  JsxRuntime.jsxs("div", {
                                                        children: [
                                                          JsxRuntime.jsx("span", {
                                                                children: t`Date:`,
                                                                className: "text-gray-500 dark:text-gray-400"
                                                              }),
                                                          JsxRuntime.jsx("span", {
                                                                children: JsxRuntime.jsxs(JsxRuntime.Fragment, {
                                                                      children: [
                                                                        JsxRuntime.jsx(ReactIntl.FormattedDate, {
                                                                              value: startDate,
                                                                              weekday: "long",
                                                                              year: "2-digit",
                                                                              month: "numeric",
                                                                              day: "2-digit"
                                                                            }),
                                                                        " ",
                                                                        JsxRuntime.jsx(ReactIntl.FormattedTime, {
                                                                              value: startDate
                                                                            }),
                                                                        " -> ",
                                                                        JsxRuntime.jsx(ReactIntl.FormattedTime, {
                                                                              value: endDate
                                                                            })
                                                                      ]
                                                                    }),
                                                                className: "font-medium text-gray-900 dark:text-white"
                                                              })
                                                        ],
                                                        className: "flex justify-between"
                                                      }),
                                                  Core__Option.getOr(Core__Option.map(details.location, (function ($$location) {
                                                              return JsxRuntime.jsxs("div", {
                                                                          children: [
                                                                            JsxRuntime.jsx("span", {
                                                                                  children: t`Location:`,
                                                                                  className: "text-gray-500 dark:text-gray-400"
                                                                                }),
                                                                            JsxRuntime.jsx("span", {
                                                                                  children: $$location,
                                                                                  className: "font-medium text-gray-900 dark:text-white"
                                                                                })
                                                                          ],
                                                                          className: "flex justify-between"
                                                                        });
                                                            })), null),
                                                  Core__Option.getOr(Core__Option.map(details.description, (function (description) {
                                                              return JsxRuntime.jsxs("div", {
                                                                          children: [
                                                                            JsxRuntime.jsx("span", {
                                                                                  children: t`Description:`,
                                                                                  className: "text-gray-500 dark:text-gray-400 block mb-1"
                                                                                }),
                                                                            JsxRuntime.jsx("p", {
                                                                                  children: description,
                                                                                  className: "text-gray-700 dark:text-gray-300"
                                                                                })
                                                                          ],
                                                                          className: "pt-2 border-t border-gray-200/50 dark:border-gray-700/50"
                                                                        });
                                                            })), null)
                                                ],
                                                className: "space-y-2 text-sm"
                                              }),
                                          JsxRuntime.jsx(CreateEventsButton.make, {
                                                events: [details],
                                                activitySlug: activitySlug,
                                                clubId: clubId,
                                                onEventsCreated: onEventsCreated
                                              })
                                        ],
                                        className: "p-5 bg-white/60 dark:bg-gray-800/60 backdrop-blur-sm rounded-2xl border border-gray-200/50 dark:border-gray-700/50 space-y-3"
                                      });
                          })), null),
                Core__Option.getOr(Core__Option.map(response.suggestedEvents, (function (events) {
                            if (events.length > 0) {
                              return JsxRuntime.jsxs("div", {
                                          children: [
                                            JsxRuntime.jsxs("h3", {
                                                  children: [
                                                    JsxRuntime.jsx(LucideReact.Calendar, {
                                                          className: "w-4 h-4"
                                                        }),
                                                    t`Suggested Events`
                                                  ],
                                                  className: "font-semibold text-gray-900 dark:text-white flex items-center gap-2"
                                                }),
                                            JsxRuntime.jsx(CreateEventsButton.make, {
                                                  events: events,
                                                  activitySlug: activitySlug,
                                                  clubId: clubId,
                                                  onEventsCreated: onEventsCreated
                                                }),
                                            events.map(function ($$event, index) {
                                                  var startDate = new Date($$event.date);
                                                  var endDate = new Date($$event.time);
                                                  return JsxRuntime.jsxs("div", {
                                                              children: [
                                                                JsxRuntime.jsx("h4", {
                                                                      children: $$event.title,
                                                                      className: "font-semibold text-gray-900 dark:text-white"
                                                                    }),
                                                                JsxRuntime.jsxs("div", {
                                                                      children: [
                                                                        JsxRuntime.jsxs("div", {
                                                                              children: [
                                                                                JsxRuntime.jsx("span", {
                                                                                      children: t`Date:`,
                                                                                      className: "text-gray-500 dark:text-gray-400"
                                                                                    }),
                                                                                JsxRuntime.jsx("span", {
                                                                                      children: JsxRuntime.jsxs(JsxRuntime.Fragment, {
                                                                                            children: [
                                                                                              JsxRuntime.jsx(ReactIntl.FormattedDate, {
                                                                                                    value: startDate,
                                                                                                    weekday: "long",
                                                                                                    year: "2-digit",
                                                                                                    month: "numeric",
                                                                                                    day: "2-digit"
                                                                                                  }),
                                                                                              " ",
                                                                                              JsxRuntime.jsx(ReactIntl.FormattedTime, {
                                                                                                    value: startDate
                                                                                                  }),
                                                                                              " -> ",
                                                                                              JsxRuntime.jsx(ReactIntl.FormattedTime, {
                                                                                                    value: endDate
                                                                                                  })
                                                                                            ]
                                                                                          }),
                                                                                      className: "font-medium text-gray-900 dark:text-white"
                                                                                    })
                                                                              ],
                                                                              className: "flex justify-between"
                                                                            }),
                                                                        Core__Option.getOr(Core__Option.map($$event.location, (function ($$location) {
                                                                                    return JsxRuntime.jsxs("div", {
                                                                                                children: [
                                                                                                  JsxRuntime.jsx("span", {
                                                                                                        children: t`Location:`,
                                                                                                        className: "text-gray-500 dark:text-gray-400"
                                                                                                      }),
                                                                                                  JsxRuntime.jsx("span", {
                                                                                                        children: $$location,
                                                                                                        className: "font-medium text-gray-900 dark:text-white"
                                                                                                      })
                                                                                                ],
                                                                                                className: "flex justify-between"
                                                                                              });
                                                                                  })), null),
                                                                        Core__Option.getOr(Core__Option.map($$event.description, (function (description) {
                                                                                    return JsxRuntime.jsx("div", {
                                                                                                children: JsxRuntime.jsx("p", {
                                                                                                      children: description,
                                                                                                      className: "text-gray-600 dark:text-gray-400 text-xs"
                                                                                                    }),
                                                                                                className: "pt-2 border-t border-gray-200/50 dark:border-gray-700/50"
                                                                                              });
                                                                                  })), null)
                                                                      ],
                                                                      className: "space-y-1 text-sm"
                                                                    })
                                                              ],
                                                              className: "p-4 bg-white/60 dark:bg-gray-800/60 backdrop-blur-sm rounded-2xl border border-gray-200/50 dark:border-gray-700/50 space-y-2"
                                                            }, index.toString());
                                                })
                                          ],
                                          className: "space-y-3"
                                        });
                            } else {
                              return null;
                            }
                          })), null)
              ],
              className: "space-y-4 animate-in fade-in slide-in-from-bottom-4 duration-300"
            });
}

var make = AIResponseCard;

export {
  make ,
}
/*  Not a pure module */
