// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Lingui from "../../locales/Lingui.re.mjs";
import * as Router from "../shared/Router.re.mjs";
import * as RelayEnv from "../../entry/RelayEnv.re.mjs";
import * as Localized from "../shared/i18n/Localized.re.mjs";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as LeagueEventPage from "../pages/LeagueEventPage.re.mjs";
import * as ReactRouterDom from "react-router-dom";
import * as LeagueEventPageQuery_graphql from "../../__generated__/LeagueEventPageQuery_graphql.re.mjs";

var LoaderArgs = {};

var loadMessages = Lingui.loadMessages({
      en: import("../../locales/src/components/pages/LeagueEventPage.re/en"),
      ja: import("../../locales/src/components/pages/LeagueEventPage.re/ja"),
      th: import("../../locales/src/components/pages/LeagueEventPage.re/th"),
      zhTW: import("../../locales/src/components/pages/LeagueEventPage.re/zh-TW"),
      zhCN: import("../../locales/src/components/pages/LeagueEventPage.re/zh-CN")
    });

async function loader(param) {
  var params = param.params;
  var url = new URL(param.request.url);
  var after = Router.SearchParams.get(url.searchParams, "after");
  var before = Router.SearchParams.get(url.searchParams, "before");
  if (import.meta.env.SSR) {
    await Localized.loadMessages(params.lang, loadMessages);
  }
  return ReactRouterDom.defer({
              data: LeagueEventPageQuery_graphql.load(RelayEnv.getRelayEnv(param.context, import.meta.env.SSR), {
                    activitySlug: params.activitySlug,
                    after: after,
                    before: before,
                    eventId: params.eventId,
                    first: 3
                  }, "store-or-network", undefined, undefined),
              i18nLoaders: Caml_option.some(Localized.loadMessages(params.lang, loadMessages))
            });
}

var Component = LeagueEventPage.make;

export {
  Component ,
  LoaderArgs ,
  loadMessages ,
  loader ,
}
/* loadMessages Not a pure module */
