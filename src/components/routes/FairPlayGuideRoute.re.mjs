// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Lingui from "../../locales/Lingui.re.mjs";
import * as Localized from "../shared/i18n/Localized.re.mjs";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as ReactRouterDom from "react-router-dom";
import * as FairPlayGuidePage from "../pages/FairPlayGuidePage.re.mjs";

var LoaderArgs = {};

var loadMessages = Lingui.loadMessages({
      en: import("../../locales/src/components/pages/FairPlayGuidePage.re/en"),
      ja: import("../../locales/src/components/pages/FairPlayGuidePage.re/ja"),
      th: import("../../locales/src/components/pages/FairPlayGuidePage.re/th"),
      zhTW: import("../../locales/src/components/pages/FairPlayGuidePage.re/zh-TW"),
      zhCN: import("../../locales/src/components/pages/FairPlayGuidePage.re/zh-CN")
    });

async function loader(param) {
  var params = param.params;
  if (import.meta.env.SSR) {
    await Localized.loadMessages(params.lang, loadMessages);
  }
  return ReactRouterDom.defer({
              i18nLoaders: import.meta.env.SSR ? undefined : Caml_option.some(Localized.loadMessages(params.lang, loadMessages))
            });
}

var Component = FairPlayGuidePage.make;

export {
  Component ,
  LoaderArgs ,
  loadMessages ,
  loader ,
}
/* loadMessages Not a pure module */
