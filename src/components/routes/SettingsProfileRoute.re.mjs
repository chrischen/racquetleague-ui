// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Lingui from "../../locales/Lingui.re.mjs";
import * as RelayEnv from "../../entry/RelayEnv.re.mjs";
import * as Localized from "../shared/i18n/Localized.re.mjs";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as ReactRouterDom from "react-router-dom";
import * as SettingsProfilePage from "../pages/SettingsProfilePage.re.mjs";
import * as SettingsProfilePageQuery_graphql from "../../__generated__/SettingsProfilePageQuery_graphql.re.mjs";

var isEmptyObj = (obj => Object.keys(obj).length === 0 && obj.constructor === Object);

function parseData(json) {
  if (isEmptyObj(json)) {
    return "Empty";
  } else {
    return {
            TAG: "Promise",
            _0: json
          };
  }
}

var LoaderArgs = {};

var loadMessages = Lingui.loadMessages({
      ja: import("../../locales/src/components/pages/SettingsProfilePage.re/ja"),
      en: import("../../locales/src/components/pages/SettingsProfilePage.re/en")
    });

async function loader(param) {
  var params = param.params;
  var query = SettingsProfilePageQuery_graphql.load(RelayEnv.getRelayEnv(param.context, import.meta.env.SSR), undefined, "store-or-network", undefined, undefined);
  if (import.meta.env.SSR) {
    await Localized.loadMessages(params.lang, loadMessages);
  }
  return ReactRouterDom.defer({
              data: query,
              i18nLoaders: import.meta.env.SSR ? undefined : Caml_option.some(Localized.loadMessages(params.lang, loadMessages))
            });
}

var Component = SettingsProfilePage.make;

export {
  isEmptyObj ,
  parseData ,
  Component ,
  LoaderArgs ,
  loadMessages ,
  loader ,
}
/* loadMessages Not a pure module */
