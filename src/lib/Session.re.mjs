// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Js_dict from "rescript/lib/es6/js_dict.js";
import * as Core__Option from "@rescript/core/src/Core__Option.re.mjs";

function make() {
  return {
          count: 0
        };
}

var PlayerState = {
  make: make
};

function make$1() {
  return {};
}

function get(session, id) {
  return Core__Option.getOr(Js_dict.get(session, id), {
              count: 0
            });
}

function update(session, id, f) {
  var session$1 = Js_dict.fromArray(Js_dict.entries(session));
  var match = Core__Option.map(Js_dict.get(session$1, id), (function (state) {
          session$1[id] = f(state);
        }));
  if (match !== undefined) {
    
  } else {
    session$1[id] = f({
          count: 0
        });
  }
  return session$1;
}

function saveState(t, namespace) {
  localStorage.setItem(namespace + "-sessionState", Core__Option.getOr(JSON.stringify(t), ""));
}

function loadState(namespace) {
  var state = localStorage.getItem(namespace + "-sessionState");
  if (state !== null) {
    return JSON.parse(state);
  } else {
    return {};
  }
}

export {
  PlayerState ,
  make$1 as make,
  get ,
  update ,
  saveState ,
  loadState ,
}
/* No side effect */
